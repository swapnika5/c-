/*Write a c++ program that illustrates the order of excecution of constructors and destructors when new class is derived from more than one base class.
program:*/
#include<iostream.h>
#include<conio.h>
class base1
{
public:
base1()
{
cout<<"constructing base1"<<endl;
}
~base1()
{
cout<<"destructing base1"<<endl;
}
};
class base2
{
public:
base2()
{
cout<<"constructing base2 "<<endl;
}
~base2()
{
cout<<"destructing base2"<<endl;
}
};
class derived1:public base1,public base2
{
public:
derived1()
{
cout<<"constructing derived1"<<endl;
}
~derived1()
{
cout<<"destructing derived1"<<endl;
}
};
class derived2:public base2,public base1
{
public:
derived2()
{
cout<<"constructing derived2"<<endl;
}
~derived2()
{
cout<<"destructing derived2"<<endl;
}
};
void main()
{

derived1 obj1;
derived2 obj2;
getch();
}
